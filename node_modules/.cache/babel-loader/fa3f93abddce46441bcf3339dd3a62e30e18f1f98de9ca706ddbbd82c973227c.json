{"ast":null,"code":"import { axiosInstance } from \"../../Axios\";\nimport { tokenConfig } from \"./auth\";\nimport { returnErrors } from \"./error\";\nimport { returnMessages } from \"./message\";\nconst initialState = {\n  message: \"\",\n  competitionList: {\n    Upcoming: [],\n    Ongoing: [],\n    End: [],\n    Participated: []\n  },\n  competitionLeaderboard: {\n    leaderboard: []\n  },\n  competitionStats: {\n    user: []\n  }\n};\nconst compReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER_PARTICIPATE\":\n      return {\n        ...state,\n        message: action.payload\n      };\n    case \"SET_CHALLENGE_LIST\":\n      return {\n        ...state,\n        competitionList: action.payload\n      };\n    case \"SET_LEADERBOARD_DATA\":\n      return {\n        ...state,\n        competitionLeaderboard: action.payload\n      };\n    case \"SET_STATS\":\n      return {\n        ...state,\n        competitionStats: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst setCompParticipate = payload => ({\n  type: \"SET_USER_PARTICIPATE\",\n  payload\n});\nconst setChallengeList = payload => ({\n  type: \"SET_CHALLENGE_LIST\",\n  payload\n});\nconst setCompLeaderboard = payload => ({\n  type: \"SET_LEADERBOARD_DATA\",\n  payload\n});\nconst setCompStats = payload => ({\n  type: \"SET_STATS\",\n  payload\n});\nexport const getCompetitionList = () => async (dispatch, getState) => {\n  try {\n    const {\n      data,\n      status\n    } = await axiosInstance.get(\"/competition/list/\", tokenConfig(getState));\n    if (status > 399) throw data;\n    dispatch(setChallengeList(data));\n  } catch (error) {\n    var _error$response$data;\n    dispatch(returnErrors((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail, error.response.status));\n    throw error.response.data;\n  }\n};\nexport const userCompParticipate = payload => async (dispatch, getState) => {\n  try {\n    const {\n      data,\n      status\n    } = await axiosInstance.post(\"/competition/user-competition/\", payload, tokenConfig(getState));\n    if (status > 399) throw data;\n    dispatch(setCompParticipate(data));\n  } catch (error) {\n    var _error$response$data2;\n    dispatch(returnErrors((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.detail, error.response.status));\n    throw error.response.data;\n  }\n};\nexport const seeCompLeaderboard = payload => async (dispatch, getState) => {\n  console.log(payload, \"getStategetStategetState\", tokenConfig(getState));\n  try {\n    const headers = tokenConfig(getState);\n    console.log({\n      ...headers,\n      body: payload\n    });\n    const {\n      data,\n      status\n    } = await axiosInstance.get(`/competition/leadboards?competition=${payload.competition}`, headers);\n    if (status > 399) throw data;\n    dispatch(setCompLeaderboard(data));\n  } catch (error) {\n    var _error$response$data3;\n    dispatch(returnErrors((_error$response$data3 = error.response.data) === null || _error$response$data3 === void 0 ? void 0 : _error$response$data3.detail, error.response.status));\n    throw error.response.data;\n  }\n};\nexport const seeCompStats = payload => async (dispatch, getState) => {\n  console.log(payload, \"getStategetStategetState\", tokenConfig(getState));\n  try {\n    const {\n      data,\n      status\n    } = await axiosInstance.get(`/competition/stats/?user_competition=${payload}`, tokenConfig(getState));\n    if (status > 399) throw data;\n    dispatch(setCompStats(data));\n  } catch (error) {\n    var _error$response$data4;\n    dispatch(returnErrors((_error$response$data4 = error.response.data) === null || _error$response$data4 === void 0 ? void 0 : _error$response$data4.detail, error.response.status));\n    throw error.response.data;\n  }\n};\nexport const createSupportCase = payload => async (dispatch, getState) => {\n  try {\n    const {\n      data,\n      status\n    } = await axiosInstance.post(`/support/create-case/`, payload, tokenConfig(getState));\n    if (status > 399) throw data;\n    const msg = data !== null && data !== void 0 && data.message ? data.message : \"Support case submitted!\";\n    console.log(msg);\n    dispatch(returnMessages(msg, 200));\n  } catch (error) {\n    var _error$response$data5;\n    console.log(error);\n    dispatch(returnErrors((_error$response$data5 = error.response.data) === null || _error$response$data5 === void 0 ? void 0 : _error$response$data5.detail, error.response.status));\n    throw error.response.data;\n  }\n};\nexport default compReducer;","map":{"version":3,"names":["axiosInstance","tokenConfig","returnErrors","returnMessages","initialState","message","competitionList","Upcoming","Ongoing","End","Participated","competitionLeaderboard","leaderboard","competitionStats","user","compReducer","state","action","type","payload","setCompParticipate","setChallengeList","setCompLeaderboard","setCompStats","getCompetitionList","dispatch","getState","data","status","get","error","_error$response$data","response","detail","userCompParticipate","post","_error$response$data2","seeCompLeaderboard","console","log","headers","body","competition","_error$response$data3","seeCompStats","_error$response$data4","createSupportCase","msg","_error$response$data5"],"sources":["/Users/fahedsayyed/Documents/mac-and-gray/src/store/reducers/competition.js"],"sourcesContent":["import { axiosInstance } from \"../../Axios\";\nimport { tokenConfig } from \"./auth\";\nimport { returnErrors } from \"./error\";\nimport { returnMessages } from \"./message\";\n\nconst initialState = {\n  message: \"\",\n  competitionList: {\n    Upcoming: [],\n    Ongoing: [],\n    End: [],\n    Participated: [],\n  },\n  competitionLeaderboard: {\n    leaderboard: [],\n  },\n  competitionStats: {\n    user: [],\n  },\n};\n\nconst compReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER_PARTICIPATE\":\n      return {\n        ...state,\n        message: action.payload,\n      };\n    case \"SET_CHALLENGE_LIST\":\n      return {\n        ...state,\n        competitionList: action.payload,\n      };\n    case \"SET_LEADERBOARD_DATA\":\n      return {\n        ...state,\n        competitionLeaderboard: action.payload,\n      };\n    case \"SET_STATS\":\n      return {\n        ...state,\n        competitionStats: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst setCompParticipate = (payload) => ({\n  type: \"SET_USER_PARTICIPATE\",\n  payload,\n});\n\nconst setChallengeList = (payload) => ({\n  type: \"SET_CHALLENGE_LIST\",\n  payload,\n});\n\nconst setCompLeaderboard = (payload) => ({\n  type: \"SET_LEADERBOARD_DATA\",\n  payload,\n});\n\nconst setCompStats = (payload) => ({\n  type: \"SET_STATS\",\n  payload,\n});\n\nexport const getCompetitionList = () => async (dispatch, getState) => {\n  try {\n    const { data, status } = await axiosInstance.get(\n      \"/competition/list/\",\n      tokenConfig(getState)\n    );\n    if (status > 399) throw data;\n    dispatch(setChallengeList(data));\n  } catch (error) {\n    dispatch(returnErrors(error.response.data?.detail, error.response.status));\n    throw error.response.data;\n  }\n};\n\nexport const userCompParticipate = (payload) => async (dispatch, getState) => {\n  try {\n    const { data, status } = await axiosInstance.post(\n      \"/competition/user-competition/\",\n      payload,\n      tokenConfig(getState)\n    );\n    if (status > 399) throw data;\n    dispatch(setCompParticipate(data));\n  } catch (error) {\n    dispatch(returnErrors(error.response.data?.detail, error.response.status));\n    throw error.response.data;\n  }\n};\n\nexport const seeCompLeaderboard = (payload) => async (dispatch, getState) => {\n  console.log(payload, \"getStategetStategetState\", tokenConfig(getState));\n  try {\n    const headers = tokenConfig(getState);\n    console.log({ ...headers, body: payload });\n    const { data, status } = await axiosInstance.get(\n      `/competition/leadboards?competition=${payload.competition}`,\n      headers\n    );\n    if (status > 399) throw data;\n    dispatch(setCompLeaderboard(data));\n  } catch (error) {\n    dispatch(returnErrors(error.response.data?.detail, error.response.status));\n    throw error.response.data;\n  }\n};\n\nexport const seeCompStats = (payload) => async (dispatch, getState) => {\n  console.log(payload, \"getStategetStategetState\", tokenConfig(getState));\n  try {\n    const { data, status } = await axiosInstance.get(\n      `/competition/stats/?user_competition=${payload}`,\n      tokenConfig(getState)\n    );\n    if (status > 399) throw data;\n    dispatch(setCompStats(data));\n  } catch (error) {\n    dispatch(returnErrors(error.response.data?.detail, error.response.status));\n    throw error.response.data;\n  }\n};\n\nexport const createSupportCase = (payload) => async (dispatch, getState) => {\n  try {\n    const { data, status } = await axiosInstance.post(\n      `/support/create-case/`,\n      payload,\n      tokenConfig(getState)\n    );\n    if (status > 399) throw data;\n    const msg = data?.message ? data.message : \"Support case submitted!\";\n    console.log(msg);\n    dispatch(returnMessages(msg, 200));\n  } catch (error) {\n    console.log(error);\n    dispatch(returnErrors(error.response.data?.detail, error.response.status));\n    throw error.response.data;\n  }\n};\n\nexport default compReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}